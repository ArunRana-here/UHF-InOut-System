@* @{
    ViewData["Title"] = "Manage Allowed Tags";
}

<style>
    body {
        background-color: #121212;
        color: #ffffff;
        font-family: Arial, sans-serif;
    }

    h2 {
        text-align: center;
        margin-bottom: 20px;
    }

    .container {
        max-width: 600px;
        margin: auto;
        background-color: #1e1e1e;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.1);
    }

    input, button {
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        background-color: #333;
        color: #fff;
        border: 1px solid #555;
        border-radius: 5px;
    }

    button {
        cursor: pointer;
        background-color: #007BFF;
        border: none;
    }

        button:hover {
            background-color: #0056b3;
        }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
    }

    th, td {
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #444;
    }

    th {
        background-color: #222;
    }

    tr:nth-child(even) {
        background-color: #2a2a2a;
    }

    tr:hover {
        background-color: #333;
    }

    .delete-btn {
        background-color: red;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 5px;
    }

        .delete-btn:hover {
            background-color: darkred;
        }
</style>

<div class="container">
    <h2>Manage Allowed Tags</h2>

    <input type="text" id="newTag" placeholder="Enter EPC..." />
    <button id="addTagBtn">Add Tag</button>

    <table id="allowedTagsTable">
        <thead>
            <tr>
                <th>EPC</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder().withUrl("/rfidhub").build();

    connection.start().then(() => {
        console.log("Connected to SignalR");
        loadAllowedTags();
    });

    function loadAllowedTags() {
        fetch('/api/allowed-tags')
            .then(response => response.json())
            .then(data => {
                updateTagTable(data);
            });
    }

    connection.on("AllowedTagsUpdated", function (data) {
        updateTagTable(data);
    });

    function updateTagTable(tags) {
        let tableBody = document.querySelector("#allowedTagsTable tbody");
        tableBody.innerHTML = "";
        tags.forEach(tag => {
            let row = `<tr>
                            <td>${tag}</td>
                            <td><button class="delete-btn" onclick="removeTag('${tag}')">Remove</button></td>
                        </tr>`;
            tableBody.innerHTML += row;
        });
    }

    document.getElementById("addTagBtn").addEventListener("click", function () {
        let newTag = document.getElementById("newTag").value.trim();
        if (!newTag) {
            alert("Please enter a tag.");
            return;
        }
        fetch('/api/allowed-tags/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(newTag)
        })
            .then(response => response.json())
            .then(data => {
                alert("Tag added successfully!");
                document.getElementById("newTag").value = "";
            });
    });

    function removeTag(tag) {
        if (confirm(`Are you sure you want to remove tag "${tag}"?`)) {
            fetch(`/api/allowed-tags/remove?epc=${tag}`, { method: 'DELETE' })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Failed to remove tag.");
                    }
                    alert("Tag removed successfully!");
                })
                .catch(error => console.error("Error:", error));
        }
    }
</script>
 *@


@{
    ViewData["Title"] = "Manage Allowed Tags";
}

<style>
    body {
        background-color: #121212;
        color: #ffffff;
        font-family: Arial, sans-serif;
    }

    h2 {
        text-align: center;
        margin-bottom: 20px;
    }

    .container {
        max-width: 600px;
        margin: auto;
        background-color: #1e1e1e;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.1);
    }

    input, button {
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        background-color: #333;
        color: #fff;
        border: 1px solid #555;
        border-radius: 5px;
    }

    button {
        cursor: pointer;
        background-color: #007BFF;
        border: none;
    }

        button:hover {
            background-color: #0056b3;
        }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
    }

    th, td {
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #444;
    }

    th {
        background-color: #222;
    }

    tr:nth-child(even) {
        background-color: #2a2a2a;
    }

    tr:hover {
        background-color: #333;
    }

    .delete-btn {
        background-color: red;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 5px;
    }

        .delete-btn:hover {
            background-color: darkred;
        }
</style>

<div class="container">
    <h2>Manage Allowed Tags</h2>

    <input type="text" id="newTag" placeholder="Enter EPC..." />
    <button id="addTagBtn">Add Tag</button>

    <table id="allowedTagsTable">
        <thead>
            <tr>
                <th>EPC</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tag in ViewBag.AllowedTags as List<string>)
            {
                <tr>
                    <td>@tag</td>
                    <td>
                        <form method="post" asp-action="RemoveAllowedTag">
                            <input type="hidden" name="epc" value="@tag" />
                            <button type="submit" class="delete-btn">Remove</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    document.getElementById("addTagBtn").addEventListener("click", function () {
        let newTag = document.getElementById("newTag").value.trim();
        if (!newTag) {
            alert("Please enter a valid EPC.");
            return;
        }

        // Use Fetch API to call the AddAllowedTag endpoint
        fetch("/Home/AddAllowedTag", {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded"
            },
            body: `epc=${encodeURIComponent(newTag)}`
        })
            .then(response => {
                if (response.ok) {
                    alert("Tag added successfully!");
                    location.reload();  // Refresh the page to see the updated tag list
                } else {
                    alert("Failed to add tag. Please try again.");
                }
            })
            .catch(error => console.error("Error:", error));
    });
</script>
